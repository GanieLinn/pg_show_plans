create extension pg_show_plans;
show pg_show_plans.is_enabled;
 pg_show_plans.is_enabled 
--------------------------
 on
(1 row)

show pg_show_plans.max_plan_length;
 pg_show_plans.max_plan_length 
-------------------------------
 16384
(1 row)

create function nest()
  returns table (level bigint, plan text)
  language plpgsql
as $$
  begin
    return query
      select pg_show_plans.level, pg_show_plans.plan from pg_show_plans
        where pg_show_plans.level >= 0;
  end;
$$;
-- text output
show pg_show_plans.plan_format;
 pg_show_plans.plan_format 
---------------------------
 text
(1 row)

select level, plan from pg_show_plans;
 level |                                 plan                                  
-------+-----------------------------------------------------------------------
     0 | Function Scan on pg_show_plans  (cost=0.00..10.00 rows=1000 width=40)
(1 row)

select * from nest();
 level |                                 plan                                 
-------+----------------------------------------------------------------------
     0 | Function Scan on nest  (cost=0.25..10.25 rows=1000 width=40)
     1 | Function Scan on pg_show_plans  (cost=0.00..12.50 rows=333 width=40)+
       |   Filter: (level >= 0)
(2 rows)

-- json output
set pg_show_plans.plan_format = 'json'; -- fails
ERROR:  parameter "pg_show_plans.plan_format" cannot be changed without restarting the server
select pgsp_format_json();
 pgsp_format_json 
------------------
 
(1 row)

show pg_show_plans.plan_format;
 pg_show_plans.plan_format 
---------------------------
 json
(1 row)

select * from nest();
 level |                 plan                  
-------+---------------------------------------
     0 | [                                    +
       |   "Plan": {                          +
       |     "Node Type": "Function Scan",    +
       |     "Parallel Aware": false,         +
       |     "Async Capable": false,          +
       |     "Function Name": "nest",         +
       |     "Alias": "nest",                 +
       |     "Startup Cost": 0.25,            +
       |     "Total Cost": 10.25,             +
       |     "Plan Rows": 1000,               +
       |     "Plan Width": 40                 +
       |   }                                  +
       | ]
     1 | [                                    +
       |   "Plan": {                          +
       |     "Node Type": "Function Scan",    +
       |     "Parallel Aware": false,         +
       |     "Async Capable": false,          +
       |     "Function Name": "pg_show_plans",+
       |     "Alias": "pg_show_plans",        +
       |     "Startup Cost": 0.00,            +
       |     "Total Cost": 12.50,             +
       |     "Plan Rows": 333,                +
       |     "Plan Width": 40,                +
       |     "Filter": "(level >= 0)"         +
       |   }                                  +
       | ]
(2 rows)

-- yaml output
select pgsp_format_yaml();
 pgsp_format_yaml 
------------------
 
(1 row)

show pg_show_plans.plan_format;
 pg_show_plans.plan_format 
---------------------------
 yaml
(1 row)

select * from nest();
 level |               plan               
-------+----------------------------------
     0 | Plan:                           +
       |   Node Type: "Function Scan"    +
       |   Parallel Aware: false         +
       |   Async Capable: false          +
       |   Function Name: "nest"         +
       |   Alias: "nest"                 +
       |   Startup Cost: 0.25            +
       |   Total Cost: 10.25             +
       |   Plan Rows: 1000               +
       |   Plan Width: 40
     1 | Plan:                           +
       |   Node Type: "Function Scan"    +
       |   Parallel Aware: false         +
       |   Async Capable: false          +
       |   Function Name: "pg_show_plans"+
       |   Alias: "pg_show_plans"        +
       |   Startup Cost: 0.00            +
       |   Total Cost: 12.50             +
       |   Plan Rows: 333                +
       |   Plan Width: 40                +
       |   Filter: "(level >= 0)"
(2 rows)

-- xml output
select pgsp_format_xml();
 pgsp_format_xml 
-----------------
 
(1 row)

show pg_show_plans.plan_format;
 pg_show_plans.plan_format 
---------------------------
 xml
(1 row)

select * from nest();
 level |                           plan                           
-------+----------------------------------------------------------
     0 | <explain xmlns="http://www.postgresql.org/2009/explain">+
       |   <Plan>                                                +
       |     <Node-Type>Function Scan</Node-Type>                +
       |     <Parallel-Aware>false</Parallel-Aware>              +
       |     <Async-Capable>false</Async-Capable>                +
       |     <Function-Name>nest</Function-Name>                 +
       |     <Alias>nest</Alias>                                 +
       |     <Startup-Cost>0.25</Startup-Cost>                   +
       |     <Total-Cost>10.25</Total-Cost>                      +
       |     <Plan-Rows>1000</Plan-Rows>                         +
       |     <Plan-Width>40</Plan-Width>                         +
       |   </Plan>                                               +
       | </explain>
     1 | <explain xmlns="http://www.postgresql.org/2009/explain">+
       |   <Plan>                                                +
       |     <Node-Type>Function Scan</Node-Type>                +
       |     <Parallel-Aware>false</Parallel-Aware>              +
       |     <Async-Capable>false</Async-Capable>                +
       |     <Function-Name>pg_show_plans</Function-Name>        +
       |     <Alias>pg_show_plans</Alias>                        +
       |     <Startup-Cost>0.00</Startup-Cost>                   +
       |     <Total-Cost>12.50</Total-Cost>                      +
       |     <Plan-Rows>333</Plan-Rows>                          +
       |     <Plan-Width>40</Plan-Width>                         +
       |     <Filter>(level &gt;= 0)</Filter>                    +
       |   </Plan>                                               +
       | </explain>
(2 rows)

